name: CD
env:
  VERSION: 1.0.0
  FORMX_FORM_ID: ${{ secrets.FORMX_FORM_ID }}
  FORMX_ACCESS_TOKEN: ${{ secrets.FORMX_ACCESS_TOKEN }}
  FORMX_API_HOST: ${{ secrets.FORMX_API_HOST }}
on:
  push:
    branches:
      - main
jobs:
  release-android:
    runs-on: [self-hosted, linux, x64, v1]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Finalize Android SDK
        run: |
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"
      - uses: oursky/github-ci-support/setup-flutter@v1
        with:
          flutter-version: "3.16.5"
      - name: Install dependencies
        working-directory: ./example
        run: flutter pub get
      - name: Setup android build configs
        working-directory: ./example
        run: |
          echo "BUILD_VERSION=`date +%s`" >> $GITHUB_ENV
          make env_to_dotenv
      - name: Build example apk
        working-directory: ./example/android
        run: |
          ./gradlew assembleRelease
      - name: Deploy example apk to appcenter
        working-directory: ./example
        run: |
          npm install -g appcenter-cli
          appcenter distribute release -f build/app/outputs/apk/release/app-release.apk -a Oursky/FormX-SDK-Flutter-Android-Sample --group 'Collaborators'
  release-ios:
    runs-on: [self-hosted, macOS, ARM64, v2]
    env:
      DEVELOPER_DIR: /Volumes/xcodes/Xcode-15.0.app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: oursky/github-ci-support/setup-flutter@v1
        with:
          flutter-version: "3.16.5"
      - name: Install dependencies
        working-directory: ./example
        run: flutter pub get
      - name: Setup ios build configs
        working-directory: ./example
        run: |
          echo "BUILD_VERSION=`date +%s`" >> $GITHUB_ENV
          make env_to_dotenv
      - name: Build & Deploy example ipa to testflight
        working-directory: ./example/ios
        run: |
          bundle install
          bundle exec fastlane app_deploy build_version:${BUILD_VERSION} version:${VERSION}
